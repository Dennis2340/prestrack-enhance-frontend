generator client {
  provider = "prisma-client-js"
}

// --- ANC DAK additions ---

enum AdministrativeGender {
  male
  female
  other
  unknown
}

model Pregnancy {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  patientId   String
  isActive    Boolean  @default(true)
  // Core ANC DAK data elements
  lmp         DateTime?
  edd         DateTime?
  gravida     Int?
  para        Int?
  riskFlags   Json?

  patient     Patient  @relation(fields: [patientId], references: [id])
  encounters  ANCEncounter[]
  interventions ANCIntervention[]

  @@index([patientId, isActive])
}

model ANCEncounter {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  pregnancyId  String
  date         DateTime
  location     String?
  providerUserId String?

  pregnancy    Pregnancy @relation(fields: [pregnancyId], references: [id])
  observations ANCObservation[]

  @@index([pregnancyId, date])
}

model ANCObservation {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())

  encounterId   String
  // Coding
  codeSystem    String      // e.g., LOINC, SNOMED
  code          String
  // Values (one of)
  valueQuantity Json?
  valueCodeableConcept Json?
  note          String?

  encounter     ANCEncounter @relation(fields: [encounterId], references: [id])
  @@index([encounterId])
}

enum ANCInterventionType {
  iptp
  iron_folate
  calcium
  deworming
}

model ANCIntervention {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())

  pregnancyId     String
  type            ANCInterventionType
  date            DateTime
  medicationCode  String?
  medicationSystem String?
  doseText        String?

  pregnancy       Pregnancy @relation(fields: [pregnancyId], references: [id])
  @@index([pregnancyId, type, date])
}

// Immunization for TT
model Immunization {
  id                  String   @id @default(uuid())
  createdAt           DateTime @default(now())

  patientId           String
  vaccineCode         String
  vaccineSystem       String
  occurrenceDateTime  DateTime
  lotNumber           String?

  patient             Patient  @relation(fields: [patientId], references: [id])
  @@index([patientId, occurrenceDateTime])
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// New WhatsApp- and FHIR-centric schema

// Enums
enum Role {
  admin
  provider
}

enum SubjectType {
  patient
  visitor
}

enum Channel {
  whatsapp
}

enum Direction {
  inbound
  outbound
}

enum ConversationStatus {
  open
  closed
  escalated
}

enum TaskType {
  medication_reminder
  reminder
  visit
  escalation
}

enum TaskStatus {
  pending
  sent
  done
  canceled
  failed
}

enum AdherenceEvent {
  taken
  missed
  skipped
  side_effect
}

// FHIR-aligned enums
enum DocumentStatus {
  current
  superseded
  entered_in_error
}

enum MedicationRequestStatus {
  active
  completed
  stopped
  entered_in_error
}

enum MedicationRequestIntent {
  order
  plan
}

// Core Users
model User {
  id        String   @id @default(uuid())
  name      String
  email     String?  @unique
  passwordHash String?
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  providerProfile ProviderProfile?
  // Backrefs
  uploadedDocuments Document[]
  performedAdherences Adherence[]
}

model ProviderProfile {
  id                            String  @id @default(uuid())
  userId                        String  @unique
  phoneE164                     String?
  notifyMedication              Boolean @default(true)
  notifyEscalation              Boolean @default(true)
  notificationCooldownMinutes   Int     @default(10)

  user User @relation(fields: [userId], references: [id])
}

// Patients and Visitors
model Patient {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  firstName   String?
  lastName    String?
  dateOfBirth DateTime?
  sex         String?  // legacy UI field
  administrativeGender AdministrativeGender? // FHIR: male|female|other|unknown
  externalId  String?  @unique
  identifiers Json?    // FHIR Identifier[] (system,value,use)
  address     Json?    // FHIR Address structure

  contacts      ContactChannel[]
  conversations Conversation[]
  prescriptions Prescription[]
  adherence     Adherence[]
  escalations   Escalation[]
  fhirLinks     FhirLink[]
  documents     Document[]
  tasks         Task[]
  pregnancies   Pregnancy[]
  immunizations Immunization[]
}

model Visitor {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  displayName String?

  contacts      ContactChannel[]
  conversations Conversation[]
  tasks         Task[]
  fhirLinks     FhirLink[]
}

model ContactChannel {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  ownerType SubjectType
  patientId String?
  visitorId String?

  type      String      // whatsapp | email | phone
  value     String      // E.164 for WhatsApp/phone
  verified  Boolean     @default(false)
  preferred Boolean     @default(false)
  consent   Boolean     @default(true)

  patient   Patient?    @relation(fields: [patientId], references: [id])
  visitor   Visitor?    @relation(fields: [visitorId], references: [id])

  @@index([type, value])
}

model Conversation {
  id            String            @id @default(uuid())
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  subjectType   SubjectType
  patientId     String?
  visitorId     String?
  channel       Channel           @default(whatsapp)
  status        ConversationStatus @default(open)
  lastMessageAt DateTime?

  patient       Patient?          @relation(fields: [patientId], references: [id])
  visitor       Visitor?          @relation(fields: [visitorId], references: [id])

  messages      CommMessage[]

  @@index([subjectType, patientId])
  @@index([subjectType, visitorId])
}

model CommMessage {
  id             String       @id @default(uuid())
  conversationId String
  createdAt      DateTime     @default(now())

  direction      Direction
  via            Channel      @default(whatsapp)
  body           String
  mediaUrl       String?
  meta           Json?

  // Sender tags
  senderType     String?      // system | provider | patient | visitor
  senderId       String?

  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@index([conversationId, createdAt])
}

model Prescription {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  patientId      String
  medicationName String
  strength       String?
  form           String?
  startDate      DateTime
  endDate        DateTime?
  timezone       String          @default("UTC")
  // FHIR MedicationRequest additions
  status         MedicationRequestStatus @default(active)
  intent         MedicationRequestIntent @default(order)
  medicationCode String?     // code value from system
  medicationSystem String?   // code system e.g., RxNorm/SNOMED

  patient        Patient         @relation(fields: [patientId], references: [id])
  schedules      DosageSchedule[]
  tasks          Task[]
  adherence      Adherence[]
}

model DosageSchedule {
  id              String         @id @default(uuid())
  prescriptionId  String
  frequency       String?        // once_daily | twice_daily | interval_hours | custom
  times           Json?          // e.g., ["08:00","20:00"]
  intervalHours   Int?

  prescription    Prescription   @relation(fields: [prescriptionId], references: [id])
}

model Task {
  id             String      @id @default(uuid())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  type           TaskType
  status         TaskStatus  @default(pending)
  scheduledTime  DateTime
  notes          String?
  metadata       Json?

  subjectType    SubjectType
  patientId      String?
  visitorId      String?

  // Optional link for medication reminders
  prescriptionId String?

  patient        Patient?      @relation(fields: [patientId], references: [id])
  visitor        Visitor?      @relation(fields: [visitorId], references: [id])
  prescription   Prescription? @relation(fields: [prescriptionId], references: [id])
  adherences     Adherence[]

  @@index([type, status, scheduledTime])
}

model Adherence {
  id             String        @id @default(uuid())
  createdAt      DateTime      @default(now())

  patientId      String
  prescriptionId String
  taskId         String?
  event          AdherenceEvent
  details        String?
  effectiveAt    DateTime?
  note           String?
  performerUserId String?

  patient        Patient       @relation(fields: [patientId], references: [id])
  prescription   Prescription  @relation(fields: [prescriptionId], references: [id])
  task           Task?         @relation(fields: [taskId], references: [id])
  performerUser  User?         @relation(fields: [performerUserId], references: [id])
}

model Escalation {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  patientId   String
  reason      String
  summary     String?
  meta        Json?

  patient     Patient  @relation(fields: [patientId], references: [id])
}

// Patient documents (images, PDFs, reports), maps to FHIR DocumentReference
model Document {
  id               String    @id @default(uuid())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  patientId        String
  uploadedByUserId String?

  title            String?
  description      String?
  url              String     // storage URL
  filename         String
  contentType      String     // MIME type
  size             Int?
  hash             String?
  metadata         Json?
  // FHIR DocumentReference alignment
  status           DocumentStatus @default(current)
  typeCode         String?        // code for document type
  typeSystem       String?        // coding system for type
  categoryCode     String?
  categorySystem   String?
  authoredAt       DateTime?
  context          Json?

  patient          Patient   @relation(fields: [patientId], references: [id])
  uploadedBy       User?     @relation(fields: [uploadedByUserId], references: [id])

  @@index([patientId, createdAt])
}

// Minimal FHIR linkage table
model FhirLink {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())

  resourceType String
  resourceId   String
  patientId    String?
  visitorId    String?

  patient      Patient?  @relation(fields: [patientId], references: [id])
  visitor      Visitor?  @relation(fields: [visitorId], references: [id])

  @@index([resourceType, resourceId])
}
